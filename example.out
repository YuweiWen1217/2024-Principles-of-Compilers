Program Semant
CompUnit_FuncDef Semant
FuncDef Semant
BlockItem_Decl Semant
VarDecl Semant
VarDefNoInit Semant
VarDefNoInit Semant
BlockItem_Decl Semant
AssignStmt Semant
Lval Semant
1
BlockItem_Decl Semant
AssignStmt Semant
Lval Semant
1
BlockItem_Decl Semant
AssignStmt Semant
Lval Semant
1
AddExp_plus Semant
AddExp_sub Semant
Lval Semant
1
UnaryExp_neg
UnaryExp_plus
Lval Semant
1
BlockItem_Decl Semant
UnaryExp_plus
UnaryExp_neg
UnaryExp_not
UnaryExp_not
UnaryExp_not
Lval Semant
1
Block Semant
BlockItem_Decl Semant
AssignStmt Semant
Lval Semant
1
UnaryExp_neg
UnaryExp_neg
UnaryExp_neg
Block Semant
BlockItem_Decl Semant
AssignStmt Semant
Lval Semant
1
AddExp_plus Semant
UnaryExp_plus
Lval Semant
1
BlockItem_Decl Semant
FunctionCall Semant
FuncRParams Semant
Lval Semant
1
BlockItem_Decl Semant
return_stmt Semant


开始中间代码生成了。

Program CodeIR
FunctionDef CodeIR
Block CodeIR
BlockItemDecl CodeIR
VarDecl CodeIR
VarDefNoInit CodeIR
VarDefNoInit CodeIR
BlockItemStmt CodeIR
AssignStmt CodeIR
Lval CodeIR
IntConst CodeIR
BlockItemStmt CodeIR
AssignStmt CodeIR
Lval CodeIR
IntConst CodeIR
BlockItemStmt CodeIR
AssignStmt CodeIR
Lval CodeIR
AddExp_plus CodeIR
AddExp_sub CodeIR
Lval CodeIR
111  1
IRgenTypeConverse: Handling type conversion
UnaryExpNeg CodeIR
IntConst CodeIR
IRgenTypeConverse: Handling type conversion
IRgenTypeConverse: Handling type conversion
IRgenTypeConverse: Handling type conversion
UnaryExpPlus CodeIR
Lval CodeIR
111  1
IRgenTypeConverse: Handling type conversion
IRgenTypeConverse: Handling type conversion
BlockItemStmt CodeIR
IfElseStmt CodeIR
UnaryExpPlus CodeIR
UnaryExpNeg CodeIR
UnaryExpNot CodeIR
UnaryExpNot CodeIR
UnaryExpNot CodeIR
Lval CodeIR
111  1
IRgenTypeConverse: Handling type conversion
IRgenTypeConverse: Handling type conversion
IRgenTypeConverse: Handling type conversion
IRgenTypeConverse: Handling type conversion
BlockStmt CodeIR
Block CodeIR
BlockItemStmt CodeIR
AssignStmt CodeIR
Lval CodeIR
UnaryExpNeg CodeIR
UnaryExpNeg CodeIR
UnaryExpNeg CodeIR
IntConst CodeIR
IRgenTypeConverse: Handling type conversion
IRgenTypeConverse: Handling type conversion
IRgenTypeConverse: Handling type conversion
BlockStmt CodeIR
Block CodeIR
BlockItemStmt CodeIR
AssignStmt CodeIR
Lval CodeIR
AddExp_plus CodeIR
UnaryExpPlus CodeIR
Lval CodeIR
111  1
IRgenTypeConverse: Handling type conversion
IRgenTypeConverse: Handling type conversion
BlockItemStmt CodeIR
expr_stmt CodeIR
FunctionCall CodeIR
Lval CodeIR
111  1
IRgenTypeConverse: Handling type conversion
BlockItemStmt CodeIR
ReturnStmt CodeIR
IntConst CodeIR
Program
  FuncDef   Name:main   ReturnType: Int
    Block   Size:7
      VarDecls   Type: Int
        VarDef   name:a   scope:1

        VarDef   name:b   scope:1

      AssignStmt:
        Lval   Type: Int      name:a   scope:1
        Intconst   val:56   Type: Int   ConstValue: 56
      AssignStmt:
        Lval   Type: Int      name:b   scope:1
        Intconst   val:4   Type: Int   ConstValue: 4
      AssignStmt:
        Lval   Type: Int      name:a   scope:1
        AddExp_plus: (+)   Type: Int   
          AddExp_sub: (-)   Type: Int   
            Lval   Type: Int      name:a   scope:1
            UnaryExp_neg:(-)   Type: Int   ConstValue: -4
              Intconst   val:4   Type: Int   ConstValue: 4
          UnaryExp_plus:(+)   Type: Int   
            Lval   Type: Int      name:b   scope:1
      IfElseStmt:
      Cond   type:bool
        UnaryExp_plus:(+)   Type: Int   
          UnaryExp_neg:(-)   Type: Int   
            UnaryExp_not:(!)   Type: Bool   
              UnaryExp_not:(!)   Type: Int   
                UnaryExp_not:(!)   Type: Int   
                  Lval   Type: Int      name:a   scope:1
      if_stmt:
        BlockStmt:
          Block   Size:1
            AssignStmt:
              Lval   Type: Int      name:a   scope:1
              UnaryExp_neg:(-)   Type: Int   ConstValue: -1
                UnaryExp_neg:(-)   Type: Int   ConstValue: 1
                  UnaryExp_neg:(-)   Type: Int   ConstValue: -1
                    Intconst   val:1   Type: Int   ConstValue: 1
      else_Stmt:
        BlockStmt:
          Block   Size:1
            AssignStmt:
              Lval   Type: Int      name:a   scope:1
              AddExp_plus: (+)   Type: Int   
                Intconst   val:0   Type: Int   ConstValue: 0
                UnaryExp_plus:(+)   Type: Int   
                  Lval   Type: Int      name:b   scope:1
      ExpressionStmt:   Type: Void   
        FuncCall   name:putint   Type: Void   
          FuncRParams:
            Lval   Type: Int      name:a   scope:1
      ReturnStmt:
        Intconst   val:0   Type: Int   ConstValue: 0
